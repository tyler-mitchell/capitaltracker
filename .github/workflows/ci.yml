name: CI

on:
    push:
        tags:
            - '*'
        branches: [main]
    pull_request:
        types: [opened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
    cancel-in-progress: true

env:
    NX_CLOUD_DISTRIBUTED_EXECUTION: true
    NX_CLOUD_DISTRIBUTED_EXECUTION_STOP_AGENTS_ON_FAILURE: true
    NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT: 5
    NEXT_TELEMETRY_DISABLED: 1

jobs:
    main:
        name: Main Job
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash
        strategy:
            matrix:
                os: [ubuntu-latest]
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Cache Node
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/Cypress/
                      ${{ github.workspace }}/node_modules/
                  key: ubuntu-latest-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ubuntu-latest-node-

            - name: Cache Rust
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ${{ github.workspace }}/target/
                  key: ubuntu-latest-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: ubuntu-latest-cargo

            - name: Install Rust Toolchain
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: rustfmt, clippy,

            - name: Install Tauri Dependencies (ubuntu only)
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

            - name: Derive appropriate SHAs for base and head for `nx affected` commands
              uses: nrwl/nx-set-shas@v3

            - name: Install dependencies
              run: yarn install

            - name: Start Nx Cloud DTE
              run: npx nx-cloud start-ci-run

            - name: Linting the workspace
              run: npx nx workspace-lint

            - name: Checking workspace format
              run: npx nx format:check

            - name: Run tasks
              run: |
                  yarn ci:build --base=$NX_BASE --head=$NX_HEAD &
                  yarn ci:lint  --base=$NX_BASE --head=$NX_HEAD &
                  yarn ci:format --base=$NX_BASE --head=$NX_HEAD &
                  yarn ci:test  --base=$NX_BASE --head=$NX_HEAD &
                  yarn ci:e2e --base=$NX_BASE --head=$NX_HEAD &
                  echo "failing now" && false

            - name: Stop Agents
              if: ${{ always() }}
              run: npx nx-cloud stop-all-agents

            - name: Deploy
              run: echo "Deploying..."

    agents:
        name: Agents
        runs-on: ubuntu-latest
        strategy:
            matrix:
                agent: [1, 2]
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Cache Node
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/Cypress/
                      ${{ github.workspace }}/node_modules/
                  key: ubuntu-latest-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ubuntu-latest-node-

            - name: Cache Rust
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ${{ github.workspace }}/target/
                  key: ubuntu-latest-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: ubuntu-latest-cargo

            - name: Install Rust Toolchain
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: rustfmt, clippy,

            - name: Install Tauri Dependencies (ubuntu only)
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

            - name: Install dependencies
              run: yarn install

            - name: Start Agent ${{ matrix.agent }}
              run: npx nx-cloud start-agent
