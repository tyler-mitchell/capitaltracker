name: ci

on:
    push:
        tags:
            - '*'
        branches: [main]
    pull_request:
        types: [opened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
    cancel-in-progress: true

env:
    NEXT_TELEMETRY_DISABLED: 1
    NX_CLOUD_DISTRIBUTED_EXECUTION: true
    NX_CLOUD_DISTRIBUTED_EXECUTION_STOP_AGENTS_ON_FAILURE: true
    NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT: 3
    NX_EXEC: 'npx nx affected --base=$NX_BASE --head=$NX_HEAD --parallel=$NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT --target'

jobs:
    main:
        name: Main Job
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash
        strategy:
            matrix:
                os: [ubuntu-latest]
        steps:
            - name: Update
              run: sudo apt-get update

            - name: Install Tauri Dependencies
              run: sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

            - name: Install Protocol Buffer Dependencies
              run: sudo apt-get install -y protobuf-compiler libprotobuf-dev

            - name: Checkout [Pull Request]
              uses: actions/checkout@v3
              if: ${{ github.event_name == 'pull_request' }}
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  fetch-depth: 0

            - name: Checkout [Main]
              uses: actions/checkout@v3
              if: ${{ github.event_name != 'pull_request' }}
              with:
                  fetch-depth: 0

            - name: Derive SHAs
              uses: nrwl/nx-set-shas@v3

            - name: Node Cache
              id: node_cache
              uses: actions/cache/restore@v3
              with:
                  path: |
                      ~/.cache/Cypress/
                      node_modules/
                  key: ubuntu-latest-node-${{ hashFiles('yarn.lock') }}
                  restore-keys: ubuntu-latest-node-

            - name: Rust Cache
              uses: actions/cache/restore@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ubuntu-latest-cargo-${{ hashFiles('Cargo.lock') }}
                  restore-keys: ubuntu-latest-cargo

            - name: Install Rust Toolchain
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: rustfmt, clippy

            - name: Install Node Dependencies
              if: steps.node_cache.outputs.cache-hit != 'true'
              run: yarn install --immutable

            - name: Start Agents
              run: npx nx-cloud start-ci-run --stop-agents-after=e2e

            - name: Format Workspace
              run: NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx-cloud record -- npx nx format:check

            - name: Lint Workspace
              run: NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx-cloud record -- npx nx workspace-lint

            - name: Run Agents
              uses: jameshenry/parallel-bash-commands@v1
              with:
                  cmd1: $NX_EXEC build
                  cmd2: $NX_EXEC lint
                  cmd3: $NX_EXEC format
                  cmd4: $NX_EXEC test
                  cmd5: $NX_EXEC e2e

            - name: Stop Agents
              if: ${{ always() }}
              run: npx nx-cloud stop-all-agents

    set-agents:
        runs-on: ubuntu-latest
        name: Set Agent Matrix
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
            - name: Calculate Matrix
              id: set-matrix
              shell: bash
              run: |
                  AGENTS_JSON_ARRAY=$(node -e "console.log(JSON.stringify(Array.from(new Array($NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT)).map((_, i) => i + 1)));")
                  echo $AGENTS_JSON_ARRAY
                  echo "matrix=$AGENTS_JSON_ARRAY" >> $GITHUB_OUTPUT

    agents:
        name: Agent ${{ matrix.agent }}
        needs: set-agents
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
        strategy:
            matrix:
                agent:
                    - ${{fromJson(needs.set-agents.outputs.matrix)}}
        steps:
            - name: Update
              run: sudo apt-get update && sudo apt-get upgrade -y

            - name: Install Tauri Dependencies
              run: sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

            - name: Install Protocol Buffer Dependencies
              run: sudo apt-get install -y protobuf-compiler libprotobuf-dev

            - name: Checkout [Pull Request]
              uses: actions/checkout@v3
              if: ${{ github.event_name == 'pull_request' }}
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  fetch-depth: 0

            - name: Checkout [Main]
              uses: actions/checkout@v3
              if: ${{ github.event_name != 'pull_request' }}
              with:
                  fetch-depth: 0

            - name: Derive SHAs
              uses: nrwl/nx-set-shas@v3

            - name: Check for affected Rust
              run: |
                  echo "head=$NX_HEAD base=$NX_BASE"
                  if ! git diff --exit-code --diff-filter=ACDMRT $NX_HEAD $NX_BASE apps/desktop; then
                    echo "RUST=true" >> $GITHUB_ENV
                  fi

            - name: Restore Node Cache
              id: node_cache
              uses: actions/cache/restore@v3
              with:
                  path: |
                      ~/.cache/Cypress/
                      node_modules/
                  key: ubuntu-latest-node-${{ hashFiles('yarn.lock') }}
                  restore-keys: ubuntu-latest-node-

            - name: Restore Rust Cache
              uses: actions/cache/restore@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ubuntu-latest-cargo-${{ hashFiles('Cargo.lock') }}
                  restore-keys: ubuntu-latest-cargo

            - name: Install Rust Toolchain
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: rustfmt, clippy

            - name: Install Node Dependencies
              if: steps.node_cache.outputs.cache-hit != 'true'
              run: yarn install

            - name: Run Agent
              run: npx nx-cloud start-agent

            - name: Archive Build
              run: |
                  tar -cvf target-agent-${{ matrix.agent }}.tar target/
                  tar -cvf node_modules-agent-${{ matrix.agent }}.tar node_modules/

            - name: Upload Build
              uses: actions/upload-artifact@v3
              with:
                  name: build-agent-${{ matrix.agent }}
                  path: |
                      target-agent-${{ matrix.agent }}.tar
                      node_modules-agent-${{ matrix.agent }}.tar

    cache:
        name: Cache Archived Build
        runs-on: ubuntu-latest
        needs: [main, agents]
        defaults:
            run:
                shell: bash
        steps:
            - name: Checkout [Pull Request]
              uses: actions/checkout@v3
              if: ${{ github.event_name == 'pull_request' }}
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  fetch-depth: 0

            - name: Checkout [Main]
              uses: actions/checkout@v3
              if: ${{ github.event_name != 'pull_request' }}
              with:
                  fetch-depth: 0

            - name: Download Build
              uses: actions/download-artifact@v3

            - name: Merge Build
              run: |
                  tar -xvf node_modules-agent-*.tar
                  tar -xvf target-agent-*.tar
                  rsync -avq -P --ignore-existing node_modules-agent-* node_modules
                  rsync -avq -P --ignore-existing target-agent-* target

            - name: Save Node Cache
              uses: actions/cache/save@v3
              with:
                  path: |
                      ~/.cache/Cypress/
                      node_modules/
                  key: ubuntu-latest-node-${{ hashFiles('yarn.lock') }}

            - name: Save Rust Cache
              uses: actions/cache/save@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ubuntu-latest-cargo-${{ hashFiles('Cargo.lock') }}
                  restore-keys: ubuntu-latest-cargo

            - uses: geekyeggo/delete-artifact@v2
              with:
                  name: build-agent-*
