name: ci

on:
    push:
        tags:
            - '*'
        branches: [main]
    pull_request:
        types: [opened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
    cancel-in-progress: true

env:
    NEXT_TELEMETRY_DISABLED: 1
    YARN_CACHE_FOLDER: ~/.cache/yarn/v6
    CYPRESS_DISABLE_GPU: 1

jobs:
    main:
        name: Main Job
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash
        strategy:
            matrix:
                os: [ubuntu-latest]
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Derive appropriate SHAs for base and head for `nx affected` commands
              uses: nrwl/nx-set-shas@v3

            - name: Restore Node Cache
              id: node_cache
              uses: actions/cache/restore@v3
              with:
                  path: |
                      ~/.cache/Cypress/
                      ~/.cache/yarn/v6
                      node_modules/
                  key: ubuntu-latest-node-${{ hashFiles('yarn.lock') }}
                  restore-keys: ubuntu-latest-node-

            - name: Restore Rust Cache
              id: rust_cache
              uses: actions/cache/restore@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ubuntu-latest-cargo-${{ hashFiles('Cargo.lock') }}
                  restore-keys: ubuntu-latest-cargo

            - name: Install Node Dependencies
              if: steps.node_cache.outputs.cache-hit != 'true'
              run: yarn install

            - name: Install Cypress Dependencies
              run: sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

            - name: Install Tauri Dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

            - name: Install Rust Toolchain
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: rustfmt, clippy

            - name: Format Workspace
              run: NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx-cloud record -- npx nx format:check

            - name: Lint Workspace
              run: NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx-cloud record -- npx nx workspace-lint

            - name: Start Agents
              run: npx nx-cloud start-ci-run --stop-agents-on-failure=true --stop-agents-after=e2e

            - name: Run Agents
              uses: jameshenry/parallel-bash-commands@v1
              with:
                  cmd1: npx nx affected --base=$NX_BASE --skip-nx-cache --head=$NX_HEAD --parallel=2 --target=build
                  cmd2: npx nx affected --base=$NX_BASE --skip-nx-cache --head=$NX_HEAD --parallel=2 --target=lint
                  cmd3: npx nx affected --base=$NX_BASE --skip-nx-cache --head=$NX_HEAD --parallel=2 --target=format
                  cmd4: npx nx affected --base=$NX_BASE --skip-nx-cache --head=$NX_HEAD --parallel=2 --target=test
                  cmd5: CYPRESS_DISABLE_GPU=1 npx nx affected --skip-nx-cache --base=$NX_BASE --head=$NX_HEAD --parallel=2 --target=e2e

            - name: Stop Agents
              if: ${{ always() }}
              run: npx nx-cloud stop-all-agents

            - name: Export Rust
              run: yarn export desktop

            - name: Save Node Cache
              if: steps.node_cache.outputs.cache-hit != 'true'
              uses: actions/cache/save@v3
              with:
                  path: |
                      ~/.cache/Cypress/
                      ~/.cache/yarn/v6
                      node_modules/
                  key: ubuntu-latest-node-${{ hashFiles('yarn.lock') }}

            - name: Save Rust Cache
              if: steps.rust_cache.outputs.cache-hit != 'true'
              uses: actions/cache/save@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ubuntu-latest-cargo-${{ hashFiles('Cargo.lock') }}

    agents:
        name: Agent
        runs-on: ubuntu-latest
        strategy:
            matrix:
                agent: [1, 2, 3]
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Restore Node Cache
              id: node_cache
              uses: actions/cache/restore@v3
              with:
                  path: |
                      ~/.cache/Cypress/
                      ~/.cache/yarn/v6
                      node_modules/
                  key: ubuntu-latest-node-${{ hashFiles('yarn.lock') }}
                  restore-keys: ubuntu-latest-node-

            - name: Restore Rust Cache
              uses: actions/cache/restore@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ubuntu-latest-cargo-${{ hashFiles('Cargo.lock') }}
                  restore-keys: ubuntu-latest-cargo

            - name: Install Rust Toolchain
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: rustfmt, clippy,

            - name: Install Tauri Dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

            - name: Install Cypress Dependencies
              run: sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

            - name: Install Node Dependencies
              if: steps.node_cache.outputs.cache-hit != 'true'
              run: yarn install

            - name: Start Agent
              run: npx nx-cloud start-agent
